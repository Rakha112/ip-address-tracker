{"version":3,"sources":["component/Info.js","component/Map.js","images/icon-arrow.svg","App.js","index.js"],"names":["axios","require","Info","ip","useState","city","country","time","isp","lat","lng","dataIP","setdataIP","useEffect","a","get","String","response","data","location","timezone","console","error","getInfoIp","className","Map","posisi","setPosisi","position","ChangeMapView","coords","map","useMap","setView","getZoom","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","Popup","App","myIP","setmyIP","cariIP","setcariIP","getIP","action","onSubmit","e","preventDefault","handlessubmit","onChange","target","value","handleschange","type","placeholder","src","arrow","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02019f8e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nconst axios = require(\"axios\");\r\nfunction Info({ ip }) {\r\n  // https://geo.ipify.org/api/v1?apiKey=at_Oipz0K4dVUIircj8WZjgSm9zio6Ky&ipAddress=\r\n  const [dataIP, setdataIP] = useState({\r\n    ip: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    time: \"\",\r\n    isp: \"\",\r\n    lat: \"\",\r\n    lng: \"\",\r\n  });\r\n  useEffect(() => {\r\n    async function getInfoIp() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://geo.ipify.org/api/v1?apiKey=at_mGXeU1zY4JbFU1sxUdh1WsaPcmALT&ipAddress=\" +\r\n            String(ip)\r\n        );\r\n\r\n        setdataIP({\r\n          ip: response.data.ip,\r\n          city: response.data.location.city,\r\n          country: response.data.location.country,\r\n          time: response.data.location.timezone,\r\n          isp: response.data.isp,\r\n          lat: response.data.location.lat,\r\n          lng: response.data.location.lng,\r\n        });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    getInfoIp();\r\n  }, [ip]);\r\n\r\n  return (\r\n    <div className=\"ip__detail\">\r\n      <p>IP ADDRESS</p>\r\n      <h2>{dataIP.ip}</h2>\r\n      <p>LOCATION</p>\r\n      <h2>\r\n        {dataIP.city}, {dataIP.country}\r\n      </h2>\r\n      <p>TIMEZONE</p>\r\n      <h2>UTC {dataIP.time}</h2>\r\n      <p>ISP</p>\r\n      <h2>{dataIP.isp}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from \"react-leaflet\";\r\nconst axios = require(\"axios\");\r\nfunction Map({ ip }) {\r\n  const [posisi, setPosisi] = useState({\r\n    lat: \"\",\r\n    lng: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n  });\r\n  let position = [posisi.lat, posisi.lng];\r\n\r\n  useEffect(() => {\r\n    async function getInfoIp() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://geo.ipify.org/api/v1?apiKey=at_mGXeU1zY4JbFU1sxUdh1WsaPcmALT&ipAddress=\" +\r\n            String(ip)\r\n        );\r\n\r\n        setPosisi({\r\n          lat: response.data.location.lat,\r\n          lng: response.data.location.lng,\r\n          city: response.data.location.city,\r\n          country: response.data.location.country,\r\n        });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    getInfoIp();\r\n  }, [ip]);\r\n\r\n  function ChangeMapView({ coords }) {\r\n    const map = useMap();\r\n    map.setView(coords, map.getZoom());\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\r\n        <ChangeMapView coords={position} />\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={position}>\r\n          <Popup>\r\n            {posisi.city}, {posisi.country}.\r\n          </Popup>\r\n        </Marker>\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","export default __webpack_public_path__ + \"static/media/icon-arrow.2eaaa5ee.svg\";","import React, { useState, useEffect } from \"react\";\nimport Info from \"./component/Info\";\nimport Map from \"./component/Map\";\nimport arrow from \"./images/icon-arrow.svg\";\nconst axios = require(\"axios\");\nfunction App() {\n  const [myIP, setmyIP] = useState([\"\"]);\n  const [cariIP, setcariIP] = useState(\"\");\n\n  useEffect(() => {\n    async function getIP() {\n      try {\n        const response = await axios.get(\"https://api.ipify.org?format=json\");\n        setmyIP(response.data.ip);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    getIP();\n  }, []);\n\n  const handleschange = (e) => {\n    e.preventDefault();\n    setcariIP(e.target.value);\n  };\n  const handlessubmit = (e) => {\n    e.preventDefault();\n    setmyIP(cariIP);\n  };\n  return (\n    <div className=\"App\">\n      <h1>IP Address Tracker</h1>\n      <div className=\"form\">\n        <form\n          action=\"submit\"\n          onSubmit={(e) => {\n            handlessubmit(e);\n          }}\n        >\n          <input\n            onChange={(e) => {\n              handleschange(e);\n            }}\n            type=\"text\"\n            placeholder=\"Search for any IP address\"\n          />\n          <button type=\"submit\">\n            <img src={arrow} alt=\"icon-arrow\" />\n          </button>\n        </form>\n      </div>\n      <Info ip={myIP} />\n      <Map ip={myIP} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}