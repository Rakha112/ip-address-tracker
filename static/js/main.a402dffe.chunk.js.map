{"version":3,"sources":["component/Info.js","component/Map.js","images/icon-arrow.svg","App.js","index.js"],"names":["axios","require","Info","ip","useState","city","country","time","isp","dataIP","setdataIP","useEffect","a","get","String","response","data","location","timezone","console","error","getInfoIp","className","Map","position","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","Popup","App","myIP","setmyIP","cariIP","setcariIP","getIP","action","onSubmit","e","preventDefault","handlessubmit","onChange","target","value","handleschange","type","placeholder","src","arrow","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OACMA,EAAQC,EAAQ,IA8CPC,MA7Cf,YAAuB,IAAPC,EAAM,EAANA,GACd,EAA4BC,mBAAS,CACnCD,GAAI,GACJE,KAAM,GACNC,QAAS,GACTC,KAAM,GACNC,IAAK,KALP,mBAAOC,EAAP,KAAeC,EAAf,KA4BA,OArBAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,+EAE2BZ,EAAMa,IAC3B,kFACEC,OAAOX,IAJf,OAEUY,EAFV,OAMIL,EAAU,CACRP,GAAIY,EAASC,KAAKb,GAClBE,KAAMU,EAASC,KAAKC,SAASZ,KAC7BC,QAASS,EAASC,KAAKC,SAASX,QAChCC,KAAMQ,EAASC,KAAKC,SAASC,SAC7BV,IAAKO,EAASC,KAAKR,MAXzB,gDAcIW,QAAQC,MAAR,MAdJ,0DADc,uBAAC,WAAD,wBAkBdC,KACC,CAAClB,IAGF,sBAAKmB,UAAU,aAAf,UACE,2CACA,6BAAKb,EAAON,KACZ,yCACA,+BACGM,EAAOJ,KADV,KACkBI,EAAOH,WAEzB,yCACA,sCAASG,EAAOF,QAChB,oCACA,6BAAKE,EAAOD,U,gCCpBHe,MAnBf,WACE,IAAMC,EAAW,CAAC,QAAS,KAC3B,OACE,qBAAKF,UAAU,MAAf,SACE,eAACG,EAAA,EAAD,CAAcC,OAAQF,EAAUG,KAAM,GAAIC,iBAAiB,EAA3D,UACE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQR,SAAUA,EAAlB,SACE,eAACS,EAAA,EAAD,mCACuB,uBADvB,mCCbK,MAA0B,uCCInCjC,EAAQC,EAAQ,IAqDPiC,MApDf,WACE,MAAwB9B,mBAAS,CAAC,KAAlC,mBAAO+B,EAAP,KAAaC,EAAb,KACA,EAA4BhC,mBAAS,IAArC,mBAAOiC,EAAP,KAAeC,EAAf,KAsBA,OApBA3B,qBAAU,WAAM,4CACd,4BAAAC,EAAA,+EAE2BZ,EAAMa,IAAI,qCAFrC,OAEUE,EAFV,OAGIqB,EAAQrB,EAASC,KAAKb,IAH1B,gDAKIgB,QAAQC,MAAR,MALJ,0DADc,uBAAC,WAAD,wBASdmB,KACC,IAWD,sBAAKjB,UAAU,MAAf,UACE,oDACA,qBAAKA,UAAU,OAAf,SACE,uBACEkB,OAAO,SACPC,SAAU,SAACC,IAVG,SAACA,GACrBA,EAAEC,iBACFP,EAAQC,GASAO,CAAcF,IAHlB,UAME,uBACEG,SAAU,SAACH,IAnBC,SAACA,GACrBA,EAAEC,iBACFL,EAAUI,EAAEI,OAAOC,OAkBTC,CAAcN,IAEhBO,KAAK,OACLC,YAAY,8BAEd,wBAAQD,KAAK,SAAb,SACE,qBAAKE,IAAKC,EAAOC,IAAI,sBAI3B,cAAC,EAAD,CAAMlD,GAAIgC,IACV,cAAC,EAAD,QC/CNmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a402dffe.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nconst axios = require(\"axios\");\r\nfunction Info({ ip }) {\r\n  const [dataIP, setdataIP] = useState({\r\n    ip: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    time: \"\",\r\n    isp: \"\",\r\n  });\r\n  useEffect(() => {\r\n    async function getInfoIp() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://geo.ipify.org/api/v1?apiKey=at_Oipz0K4dVUIircj8WZjgSm9zio6Ky&ipAddress=\" +\r\n            String(ip)\r\n        );\r\n        setdataIP({\r\n          ip: response.data.ip,\r\n          city: response.data.location.city,\r\n          country: response.data.location.country,\r\n          time: response.data.location.timezone,\r\n          isp: response.data.isp,\r\n        });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    getInfoIp();\r\n  }, [ip]);\r\n\r\n  return (\r\n    <div className=\"ip__detail\">\r\n      <p>IP ADDRESS</p>\r\n      <h2>{dataIP.ip}</h2>\r\n      <p>LOCATION</p>\r\n      <h2>\r\n        {dataIP.city}, {dataIP.country}\r\n      </h2>\r\n      <p>TIMEZONE</p>\r\n      <h2>UTC {dataIP.time}</h2>\r\n      <p>ISP</p>\r\n      <h2>{dataIP.isp}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nfunction Map() {\r\n  const position = [51.505, -0.09];\r\n  return (\r\n    <div className=\"map\">\r\n      <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={position}>\r\n          <Popup>\r\n            A pretty CSS3 popup. <br /> Easily customizable.\r\n          </Popup>\r\n        </Marker>\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","export default __webpack_public_path__ + \"static/media/icon-arrow.2eaaa5ee.svg\";","import React, { useState, useEffect } from \"react\";\nimport Info from \"./component/Info\";\nimport Map from \"./component/Map\";\nimport arrow from \"./images/icon-arrow.svg\";\nconst axios = require(\"axios\");\nfunction App() {\n  const [myIP, setmyIP] = useState([\"\"]);\n  const [cariIP, setcariIP] = useState(\"\");\n\n  useEffect(() => {\n    async function getIP() {\n      try {\n        const response = await axios.get(\"https://api.ipify.org?format=json\");\n        setmyIP(response.data.ip);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    getIP();\n  }, []);\n\n  const handleschange = (e) => {\n    e.preventDefault();\n    setcariIP(e.target.value);\n  };\n  const handlessubmit = (e) => {\n    e.preventDefault();\n    setmyIP(cariIP);\n  };\n  return (\n    <div className=\"App\">\n      <h1>IP Address Tracker</h1>\n      <div className=\"form\">\n        <form\n          action=\"submit\"\n          onSubmit={(e) => {\n            handlessubmit(e);\n          }}\n        >\n          <input\n            onChange={(e) => {\n              handleschange(e);\n            }}\n            type=\"text\"\n            placeholder=\"Search for any IP address\"\n          />\n          <button type=\"submit\">\n            <img src={arrow} alt=\"icon-arrow\" />\n          </button>\n        </form>\n      </div>\n      <Info ip={myIP} />\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}